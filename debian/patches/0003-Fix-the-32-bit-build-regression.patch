From: cqian2 <qian.chunqiang@intel.com>
Date: Mon, 19 Sep 2022 15:52:35 +0800
Subject: Fix the 32 bit build regression

---
 media_softlet/agnostic/common/os/mos_utilities.h                   | 5 +++++
 media_softlet/linux/common/os/osservice/mos_utilities_specific.cpp | 5 ++---
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/media_softlet/agnostic/common/os/mos_utilities.h b/media_softlet/agnostic/common/os/mos_utilities.h
index be0f299..7b61748 100644
--- a/media_softlet/agnostic/common/os/mos_utilities.h
+++ b/media_softlet/agnostic/common/os/mos_utilities.h
@@ -2786,6 +2786,11 @@ template<class _Ty, class... _Types> inline
 _Ty* MosUtilities::MosNewArrayUtil(size_t numElements)
 #endif
 {
+    if (numElements > PTRDIFF_MAX)
+    {
+        return nullptr;
+    }
+
 #if (_DEBUG || _RELEASE_INTERNAL)
     //Simulate allocate memory fail if flag turned on
     if (MosSimulateAllocMemoryFail(sizeof(_Ty) * numElements, NO_ALLOC_ALIGNMENT, functionName, filename, line))
diff --git a/media_softlet/linux/common/os/osservice/mos_utilities_specific.cpp b/media_softlet/linux/common/os/osservice/mos_utilities_specific.cpp
index 996aa4f..4e56a79 100644
--- a/media_softlet/linux/common/os/osservice/mos_utilities_specific.cpp
+++ b/media_softlet/linux/common/os/osservice/mos_utilities_specific.cpp
@@ -44,7 +44,7 @@
 #include "mos_utilities_specific.h"
 #include "mos_utilities.h"
 #include "mos_util_debug.h"
-
+#include "inttypes.h"
 
 const char           *MosUtilitiesSpecificNext::m_szUserFeatureFile     = USER_FEATURE_FILE;
 MOS_PUF_KEYLIST      MosUtilitiesSpecificNext::m_ufKeyList              = nullptr;
@@ -1020,8 +1020,7 @@ MOS_STATUS MosUtilitiesSpecificNext::UserFeatureDumpDataToFile(const char *szFil
                         *(uint32_t*)(pKeyTmp->pElem->pValueArray[j].ulValueBuf));
                     break;
                 case UF_QWORD:
-                    fprintf(File, "\t\t\t%lu\n",
-                        *(uint64_t*)(pKeyTmp->pElem->pValueArray[j].ulValueBuf));
+                    fprintf(File, "\t\t\t%" PRIu64"\n", *(uint64_t*)(pKeyTmp->pElem->pValueArray[j].ulValueBuf));
                     break;
                 default:
                     fprintf(File, "\t\t\t%s\n",
